{"version":3,"sources":["assets/img/anu.png","github-card.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["module","exports","githubcard","props","state","username","name","avatar","location","repos","followers","following","homeUrl","notFound","url","console","log","fetch","then","response","json","data","setState","login","avatar_url","public_repos","html_url","message","catch","err","this","fetchProfile","className","style","height","width","bind","Component","Search","input","React","createRef","e","preventDefault","current","value","role","onSubmit","handleform","ref","placeholder","id","type","class","Profile","repositories","href","target","title","src","alt","particlesOptions","particles","number","density","enable","size","random","anim","speed","size_min","line_linked","move","direction","out_mode","interactivity","events","onhover","mode","onclick","modes","bubble","distance","duration","opacity","repulse","App","params","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.613bd3d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/anu.9418b8d8.png\";","import React, {Component} from 'react';\nimport {Card, CardTitle} from 'reactstrap';\nimport './github.css';\nimport anu from './assets/img/anu.png';\nimport Particles from 'react-particles-js';\n\nconst API = 'https://api.github.com/users/';\n\nclass githubcard extends Component {\n    constructor(props){\n        super(props)\n\n        this.state = {\n\n            username: 'verma-ananya',\n            name:'',\n            avatar:'',\n            location:'',\n            repos:'',\n            followers: '',\n            following:'',\n            homeUrl:'',\n            notFound:'',\n\n        }\n    }\n\n    fetchProfile(username){\n\n        let url = API + username;\n\n        console.log(url);\n\n        fetch(url)\n        .then( (response) => response.json())\n        .then((data) => {\n\n            this.setState({\n                username: data.login,\n                name: data.name,\n                avatar:data.avatar_url,\n                location: data.location,\n                repos: data.public_repos,\n                followers: data.followers,\n                following: data.following,\n                homeUrl: data.html_url,\n                notFound: data.message,\n            })\n        })\n        .catch((err) => console.log('error occured while fetching the user profile'))\n        \n\n        console.log(\"Contents\");\n        console.log(this.state);\n    \n    }\n\n    componentDidMount(){\n        this.fetchProfile(this.state.username);\n    }\n    \n    render() { \n        return ( \n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12\" style={{height: '100vh'}}>\n                    <div className=\"card text-white bg-dark\" style={{width: '25rem'}}>\n                        <div className=\"card-body\">\n                            <Search fetchProfile={this.fetchProfile.bind(this)}/>\n                            <Profile data={this.state}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div> );\n    }\n}\n \nexport default githubcard;\n\nclass Search extends Component {\n    \n    //this keyword in the event handlers within the javascript is undefined. \n\n    constructor(props){\n\n        super(props);\n\n        this.input = React.createRef();\n    }\n\n    handleform(e){\n        e.preventDefault(); //preventDefault() is used with input & button elements to prevent a browser reload/refresh. //event handlers\n        console.log(\"there there there\",this.input.current.value)\n        \n        let username = this.input.current.value;\n\n        console.log(username)\n\n        this.props.fetchProfile(username);\n        this.input.current.value=''\n\n    }\n\n    render() { \n        return ( \n                <div className=\"search-profile\">\n                    <form className=\"navbar-form\" role=\"search\" onSubmit={this.handleform.bind(this)}>\n                        <div className=\"input-group add-on\">\n                            <input className=\"form-control\" ref={this.input} placeholder=\"Search\" name=\"srch-term\" id=\"srch-term\" type=\"text\"/>\n                            <div className=\"input-group-btn\">\n                                <button className=\"btn btn-outline-secondary\" type=\"submit\"><i class=\"fa fa-search\"></i></button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n         );\n    }\n\n}\n\nclass Profile extends Component {\n    state = {  }\n    render() { \n\n        console.log(\"Profile \");\n        console.log(this.props);\n\n        var data = this.props.data;\n        var followers = data.homeUrl + \"?tab=followers\";\n        var repositories = data.homeUrl + \"?tab=repositories\";\n        var following = data.homeUrl  + \"/?tab=following\";\n        if (data.notFound === 'Not Found')\n        return (\n            <div className=\"notfound\">\n                <h4>Oops !!!</h4>\n                <p>Username not found.<br/> Try Again </p>\n            </div>\n        );\n        else\n        return (\n\n            <section className=\"user-profile\">\n                <div className=\"github-profile-info\">\n                    <a href={data.homeUrl} target=\"_blank\" title={data.name || data.username}><img className=\"mx-auto d-block\" src={data.avatar} alt={data.username}/></a>\n                    <h5><a href={data.homeUrl} target=\"_blank\" title={data.name || data.username}> {data.name || data.username }</a></h5>\n                    <h6>{data.location || \"I'm YOU, so I live within you\"}</h6>\n                </div>\n                <div className=\"github-profile-state\">\n                    <ul>\n                        <li>\n                            <a href={followers} target=\"_blank\" title=\"Number Of Followers\"><b>{data.followers}</b> <span> Followers</span></a>\n                        </li>\n                        <li>\n                            <a href={following} target=\"_blank\" title=\"Number Of Following\"><b>{data.following}</b> <span> Following</span></a>\n                        </li>\n                        <li>\n                            <a href={repositories} target=\"_blank\" title=\"Number Of Repositoriy\"><b>{data.repos}</b> <span> Repository</span></a>\n                        </li>\n                    </ul>\n                </div>\n            </section>\n\n        );\n\n    }\n}\n ","import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './Particles.css';\nimport Particles from 'react-particles-js';\nimport GithubCard from './github-card';\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 160,\n      density: {\n        enable: false,\n      }\n    },\n      size: {\n        value: 3,\n        random: true,\n        anim : {\n          speed : 4,\n          size_min : 0.3\n        }\n      },\n      line_linked : {\n        enable: false, \n      },\n      move : {\n        random : true,\n        speed : 1,\n        direction : \"top\",\n        out_mode : \"out\",\n      }\n    },\n      interactivity : {\n        events : {\n          onhover : {\n            enable : true,\n            mode : \"bubble\",\n          },\n          onclick : {\n            enable : true,\n            mode : \"repulse\"\n          }\n        },\n        modes : {\n          bubble : {\n            distance : 250,\n            duration : 2,\n            size : 0,\n            opacity : 0\n          },\n          repulse : {\n            distance : 400,\n            duration : 4\n          }\n        }\n      }\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <GithubCard />\n        <Particles className=\"particles\" params={particlesOptions} height=\"95%\" width=\"95%\"/>;    \n    </div>\n  );\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport GithubCard from './github-card';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}